{"ast":null,"code":"var _s = $RefreshSig$();\n/* @Libs */\n\nimport queryString from \"query-string\";\n\n/* @Hooks */\nimport { useMemo, useRef } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nconst initialParseOptions = {\n  arrayFormat: \"separator\",\n  arrayFormatSeparator: \"|\",\n  parseBooleans: true,\n  parseNumbers: true\n};\nconst initialStringifyOptions = {\n  arrayFormat: \"separator\",\n  arrayFormatSeparator: \"|\",\n  skipEmptyString: true,\n  skipNull: true\n};\nexport function useSearchParamState(initialState, options) {\n  _s();\n  const {\n    replace = true,\n    parseOptions,\n    stringifyOptions\n  } = options || {};\n  const location = useLocation();\n  const [, setSearchParams] = useSearchParams();\n  const initialStateRef = useRef(typeof initialState === \"function\" ? initialState() : initialState || {});\n  const state = useMemo(() => ({\n    ...initialStateRef.current,\n    ...queryString.parse(location.search, {\n      ...initialStringifyOptions,\n      ...parseOptions\n    })\n  }), [location.search, parseOptions]);\n  function setSearchParamsState(s) {\n    const newState = typeof s === \"function\" ? s(state) : s;\n    const stringifyState = queryString.stringify({\n      ...state,\n      ...newState\n    }, {\n      ...initialParseOptions,\n      ...stringifyOptions\n    });\n    setSearchParams(stringifyState, {\n      replace\n    });\n  }\n  return [state, setSearchParamsState];\n}\n_s(useSearchParamState, \"xHg23fTt0FYWMFPbZ4rv12UXXDY=\", false, function () {\n  return [useLocation, useSearchParams];\n});","map":{"version":3,"names":["queryString","useMemo","useRef","useLocation","useSearchParams","initialParseOptions","arrayFormat","arrayFormatSeparator","parseBooleans","parseNumbers","initialStringifyOptions","skipEmptyString","skipNull","useSearchParamState","initialState","options","replace","parseOptions","stringifyOptions","location","setSearchParams","initialStateRef","state","current","parse","search","setSearchParamsState","s","newState","stringifyState","stringify"],"sources":["/Users/zeus/Desktop/Projects/6point6-NP-DEV/6point6_Dev_technology_radar/src/hooks/use-search-param-state.tsx"],"sourcesContent":["/* @Libs */\nimport { type ParseOptions, type StringifyOptions } from \"query-string\";\nimport queryString from \"query-string\";\n\n/* @Hooks */\nimport { type SetStateAction, useMemo, useRef } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\nconst initialParseOptions: ParseOptions = {\n  arrayFormat: \"separator\",\n  arrayFormatSeparator: \"|\",\n  parseBooleans: true,\n  parseNumbers: true,\n};\n\nconst initialStringifyOptions: StringifyOptions = {\n  arrayFormat: \"separator\",\n  arrayFormatSeparator: \"|\",\n  skipEmptyString: true,\n  skipNull: true,\n};\n\ntype Options = {\n  replace?: boolean;\n  parseOptions?: ParseOptions;\n  stringifyOptions?: StringifyOptions;\n};\n\ntype SearchParamState = Record<string, any>;\n\nexport function useSearchParamState<\n  T extends SearchParamState = SearchParamState\n>(initialState?: T | (() => T), options?: Options) {\n  type State = Partial<T>;\n\n  const { replace = true, parseOptions, stringifyOptions } = options || {};\n  const location = useLocation();\n  const [, setSearchParams] = useSearchParams();\n  const initialStateRef = useRef<State>(\n    typeof initialState === \"function\"\n      ? (initialState as () => T)()\n      : initialState || {}\n  );\n  const state = useMemo(\n    () => ({\n      ...initialStateRef.current,\n      ...(queryString.parse(location.search, {\n        ...initialStringifyOptions,\n        ...parseOptions,\n      }) as State),\n    }),\n    [location.search, parseOptions]\n  );\n\n  function setSearchParamsState(s: SetStateAction<State>) {\n    const newState = typeof s === \"function\" ? s(state) : s;\n\n    const stringifyState = queryString.stringify(\n      { ...state, ...newState },\n      { ...initialParseOptions, ...stringifyOptions }\n    );\n\n    setSearchParams(stringifyState, { replace });\n  }\n\n  return [state, setSearchParamsState] as const;\n}\n"],"mappings":";AAAA;;AAEA,OAAOA,WAAW,MAAM,cAAc;;AAEtC;AACA,SAA8BC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAE/D,MAAMC,mBAAiC,GAAG;EACxCC,WAAW,EAAE,WAAW;EACxBC,oBAAoB,EAAE,GAAG;EACzBC,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,uBAAyC,GAAG;EAChDJ,WAAW,EAAE,WAAW;EACxBC,oBAAoB,EAAE,GAAG;EACzBI,eAAe,EAAE,IAAI;EACrBC,QAAQ,EAAE;AACZ,CAAC;AAUD,OAAO,SAASC,mBAAmB,CAEjCC,YAA4B,EAAEC,OAAiB,EAAE;EAAA;EAGjD,MAAM;IAAEC,OAAO,GAAG,IAAI;IAAEC,YAAY;IAAEC;EAAiB,CAAC,GAAGH,OAAO,IAAI,CAAC,CAAC;EACxE,MAAMI,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAM,GAAGiB,eAAe,CAAC,GAAGhB,eAAe,EAAE;EAC7C,MAAMiB,eAAe,GAAGnB,MAAM,CAC5B,OAAOY,YAAY,KAAK,UAAU,GAC7BA,YAAY,EAAc,GAC3BA,YAAY,IAAI,CAAC,CAAC,CACvB;EACD,MAAMQ,KAAK,GAAGrB,OAAO,CACnB,OAAO;IACL,GAAGoB,eAAe,CAACE,OAAO;IAC1B,GAAIvB,WAAW,CAACwB,KAAK,CAACL,QAAQ,CAACM,MAAM,EAAE;MACrC,GAAGf,uBAAuB;MAC1B,GAAGO;IACL,CAAC;EACH,CAAC,CAAC,EACF,CAACE,QAAQ,CAACM,MAAM,EAAER,YAAY,CAAC,CAChC;EAED,SAASS,oBAAoB,CAACC,CAAwB,EAAE;IACtD,MAAMC,QAAQ,GAAG,OAAOD,CAAC,KAAK,UAAU,GAAGA,CAAC,CAACL,KAAK,CAAC,GAAGK,CAAC;IAEvD,MAAME,cAAc,GAAG7B,WAAW,CAAC8B,SAAS,CAC1C;MAAE,GAAGR,KAAK;MAAE,GAAGM;IAAS,CAAC,EACzB;MAAE,GAAGvB,mBAAmB;MAAE,GAAGa;IAAiB,CAAC,CAChD;IAEDE,eAAe,CAACS,cAAc,EAAE;MAAEb;IAAQ,CAAC,CAAC;EAC9C;EAEA,OAAO,CAACM,KAAK,EAAEI,oBAAoB,CAAC;AACtC;AAAC,GApCeb,mBAAmB;EAAA,QAMhBV,WAAW,EACAC,eAAe;AAAA"},"metadata":{},"sourceType":"module"}